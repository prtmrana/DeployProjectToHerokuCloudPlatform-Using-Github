package com.example.repositories;

import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.example.entities.Staff;

import jakarta.transaction.Transactional;

@Repository
@Transactional
public interface OfficeStaffRepository extends JpaRepository {

	@Modifying
	@Query(value = "UPDATE OfficeStaff o SET o.Officestaff_name = :name, o.Officestaff_mobile = :mobile, "
			+ " o.Officestaff_email = :email, o.Officestaff_username = :username, "
			+ " o.Officestaff_password = :password, o.Officestaff_role = :role, "
			+ " o.Officestaff_isactive = :isActive WHERE o.staff_id = :staffId", nativeQuery = true)
	void updateOfficeStaff(@Param("name") String name, @Param("mobile") String mobile, @Param("email") String email,
			@Param("username") String username, @Param("password") String password, @Param("role") String role,
			@Param("isActive") boolean isActive, @Param("staffId") int staffId);

	@Modifying
	@Query(value = "SELECT * FROM Staff s WHERE s.staff_username = :username", nativeQuery = true)
	Optional<Staff> findByUsername(@Param("username") String username);

}
